#ifndef SORTEDSET_H
#define SORTEDSET_H
#include "IntList.h"

#include <iostream>

class SortedSet: public IntList{
    public:
        SortedSet();
       ~SortedSet();
        SortedSet(const SortedSet &);
        SortedSet(const IntList &);
        
        bool in(int value);
        SortedSet operator|(const SortedSet &);
        SortedSet operator&(const SortedSet &);  
        SortedSet operator|=(const SortedSet &);
        SortedSet operator&=(const SortedSet &);
            
        void add(int value);
        void push_front(int value);
        void push_back(int value);
        void insert_ordered(int value);
};
#endif
    /*Accessors
in(int value): This function returns true if the value passed in is a member of the set, otherwise false.

operator|: This function returns a SortedSet object that is the union of 2 SortedSet objects, the left and right operands of this binary operator. A union of 2 sets is a set that consists of all of the distinct elements of both sets combined. That is, all of the values that are in the left operand or in the right operand or in both operands.
sset1 = sset2 | sset3;

operator&: This function returns a SortedSet object that is the intersection of 2 SortedSet objects, the left and right operands of this binary operator. An intersection of 2 sets is a set of all elements that are in both sets. That is, all of the values that are both in the left operand and in the right operand.
sset1 = sset2 & sset3;

operator|=: This function is the union-assign operator function. It returns a union of the left and right operands, but also sets the left operand's value to be that union as well. In other words, sset1 |= sset2 is equivalent to sset1 = sset1 | sset2.

Hint: Take advantage of functions you have already written and you know work.

operator&=: This function is the intersection-assign operator function. It returns an intersection of the left and right operands, but also sets the left operand's value to be that intersection as well. In other words, sset1 &= sset2 is equivalent to sset1 = sset1 & sset2. */

